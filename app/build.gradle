apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    flavorDimensions "default"

    buildToolsVersion '28.0.2'

    defaultConfig {
        multiDexEnabled true
        applicationId "home.learn.hmt.calendarvn_android"
        minSdkVersion 23
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            buildConfigField "boolean", "MOCK_DATA", "false"
            // xuất ra lỗi
            debuggable false
            // tối ưu hóa
            // Shrink your code
            //Be aware that code shrinking slows down the build time
            minifyEnabled true
            // mã hóa
            useProguard true
            // Tối giản res
            //Resource shrinking is available with the Android plugin for Gradle,
            // which removes unused resources from your packaged app, including unused resources in code libraries
            shrinkResources = true
            // the proguardFiles property specifies the following ProGuard rules
            //Tip: For even more code shrinking, try the proguard-android-optimize.txt file located in the same directory.
            // It includes the same ProGuard rules, but with other optimizations that perform analysis at the bytecode level—inside and across methods—to reduce your APK size further and help it run faster.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "boolean", "MOCK_DATA", "false"
            // xuất ra lỗi
            debuggable true
            useProguard false
            // tối ưu hóa
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
        prd {
            versionCode rootProject.ext.versionCode_product
            versionName rootProject.ext.versionName_product
            applicationIdSuffix = ".prd"
            // app name của ứng dụng
            resValue "string", "app_name", "Movie DB PRD"
        }
        stg {
            versionCode rootProject.ext.versionCode_dev
            versionName rootProject.ext.versionName_dev
            // khi build sẽ gán và đuôi của applicationId
            applicationIdSuffix = ".stg"
            // app name của ứng dụng
            resValue "string", "app_name", "Movie DB STG"
        }
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }


}

dependencies {
    //https://developer.android.com/jetpack/androidx/migrate
    // Convert to AndroidX
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.0.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "com.google.android.material:material:1.0.0-rc01"
    implementation "androidx.constraintlayout:constraintlayout:1.1.2"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-alpha1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:runner:1.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0"

    // RxJava - RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"

    //AHBottomNavigation
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    // AndroidX (based on koin-android)
// Koin AndroidX Scope feature
    implementation "org.koin:koin-androidx-scope:$koin_version"
// Koin AndroidX ViewModel feature
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // use -ktx for Kotlin

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
}
